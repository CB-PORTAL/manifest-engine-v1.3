{
  "name": "manifest-engine",
  "version": "1.3.0",
  "description": "AI-powered content creation and automation platform",
  "main": "src/backend/server.js",
  "scripts": {
    "start": "npm run install-all && npm run start-all",
    "install-all": "npm install && cd src/frontend && npm install && cd ../backend && npm install",
    "start-all": "concurrently \"npm run backend\" \"npm run frontend\" \"npm run ai-engine\"",
    "backend": "cd src/backend && npm start",
    "frontend": "cd src/frontend && npm start",
    "ai-engine": "cd src/ai-engine && python main.py",
    "dev": "nodemon --exec npm run start-all",
    "build": "npm run build-frontend && npm run build-backend",
    "build-frontend": "cd src/frontend && npm run build",
    "build-backend": "cd src/backend && npm run build",
    "test": "npm run test-frontend && npm run test-backend",
    "test-frontend": "cd src/frontend && npm test",
    "test-backend": "cd src/backend && npm test",
    "docker-build": "docker-compose build",
    "docker-up": "docker-compose up",
    "docker-down": "docker-compose down",
    "setup": "node scripts/setup.js",
    "clean": "node scripts/clean.js",
    "deploy": "node scripts/deploy.js"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/yourusername/manifest-engine.git"
  },
  "keywords": [
    "ai",
    "video-processing",
    "content-creation",
    "automation",
    "youtube",
    "tiktok",
    "viral",
    "clips"
  ],
  "author": "Devon Carey",
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/yourusername/manifest-engine/issues"
  },
  "homepage": "https://github.com/yourusername/manifest-engine#readme",
  "dependencies": {
    "concurrently": "^7.6.0",
    "cross-env": "^7.0.3",
    "dotenv": "^16.0.3",
    "node-fetch": "^2.7.0"
  },
  "devDependencies": {
    "eslint": "^8.36.0",
    "husky": "^8.0.3",
    "lint-staged": "^13.2.0",
    "nodemon": "^2.0.20",
    "prettier": "^2.8.7"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "os": [
    "win32",
    "darwin",
    "linux"
  ],
  "cpu": [
    "x64",
    "arm64"
  ]
}
